`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 26.12.2024 12:59:20
// Design Name: 
// Module Name: Control_Unit
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module Control_Unit(
input clk, 
input reset, 
input [6:0] opcode, 
input [2:0] funct3, 
input [6:0] funct7, 
output reg[5:0] alu_ctrl,  // it will tell alu that which operation is to be done
output reg lb,             // control signal for load instruction
output reg mem_to_reg,     // control signal for memory to register data movement instructions
output reg bneq_ctrl,    // control signal for bneq instr. that has to be give to IFU
output reg beq_ctrl,     // control signal for beq instr. that has to be give to IFU
output reg bge_ctrl,     // control signal for bge instr. that has to be give to IFU
output reg blt_ctrl,     // control signal for blt instr. that has to be give to IFU
output reg bltu_ctrl,    // control signal for bltu instr. that has to be give to IFU 
output reg bgeu_ctrl,    // control signal for bgeu instr. that has to be give to IFU
output reg jump_ctrl,    // control signal for jump instr. that has to be give to IFU
output reg lui_ctrl,     // control signal for lui instr. 
output reg sw            // control signal for storeword instr.
    );
    
    always@(posedge clk && reset)
       begin
           alu_ctrl <= 6'b000000;
       end
       
    always@(opcode || funct3 || funct7)
       begin
           case(opcode)
           7'b0110011: begin
                           lb = 0;
                           mem_to_reg = 0;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 0;
                           lui_ctrl  = 0;
                           case(funct3)
                           3'b000:begin
                                      case(funct7)
                                      7'b0000000: alu_ctrl <= 6'b000001;  // ADD
                                      7'b0100000: alu_ctrl <= 6'b000010;  // SUB
                                      endcase
                                  end
                           3'b001: alu_ctrl <= 6'b000011;  // SLL
                           3'b010: alu_ctrl <= 6'b000100;  // SLT
                           3'b011: alu_ctrl <= 6'b000101;  // SLTU
                           3'b100: alu_ctrl <= 6'b000110;  // XOR
                           3'b101:begin
                                      case(funct7)
                                      7'b0000000: alu_ctrl <= 6'b000111;  // SRL
                                      7'b0100000: alu_ctrl <= 6'b001000;  // SRA
                                      endcase
                                  end
                           3'b110: alu_ctrl <= 6'b001001;    // OR
                           3'b111: alu_ctrl <= 6'b001010;  // AND
                           endcase
                       end
           7'b0010011:begin
                           lb = 0;
                           mem_to_reg = 0;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 0;
                           lui_ctrl  = 0;
                          case(funct3)
                          3'b000: alu_ctrl <= 6'b001011;  // ADDI
                          3'b010: alu_ctrl <= 6'b001100;  // SLTI
                          3'b011: alu_ctrl <= 6'b001101;  // SLTIU
                          3'b100: alu_ctrl <= 6'b001110;  // XORI
                          3'b110: alu_ctrl <= 6'b001111;  // ORI
                          3'b111: alu_ctrl <= 6'b010000;  // ANDI
                          3'b001: alu_ctrl <= 6'b010001;  // SLLI
                          3'b101: alu_ctrl <= 6'b010010;  // SRLI  OR  SRAI (be careful while implemeting this)
                          endcase
                      end
           7'b0000011:begin
                           
                           mem_to_reg = 1;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 0;
                           lui_ctrl  = 0;
                          case(funct3)
                          3'b000:begin
                                     alu_ctrl <= 6'b010011;  // LB
                                     lb = 1;
                                  end
                          3'b001: alu_ctrl <= 6'b010100;  // LH
                          3'b010: alu_ctrl <= 6'b010101;  // LW
                          3'b100: alu_ctrl <= 6'b010110;  // LBU
                          3'b101: alu_ctrl <= 6'b010111;  // LHU
                          endcase
                      end
           7'b0100011:begin
                          mem_to_reg = 1;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 0;
                           lui_ctrl  = 0;
                           lb = 0;
                          case(funct3)
                          3'b000: alu_ctrl <= 6'b011000;  // SB
                          3'b001: alu_ctrl <= 6'b011001;  // SH
                          3'b010: begin
                                      alu_ctrl <= 6'b011010;  // SW 
                                      sw <= 1;
                                   end 
                          endcase
                      end
           7'b1100011:begin
                           mem_to_reg = 0;
                           jump_ctrl  = 0;
                           lui_ctrl  = 0;
                           lb = 0;
                           sw =0;
                          case(funct3)
                          3'b000:begin
                                  alu_ctrl <= 6'b011011;  // BEQ
                                  bneq_ctrl = 0;
                                  beq_ctrl = 1;
                                  bge_ctrl = 0;
                                  blt_ctrl  = 0;
                                  bltu_ctrl = 0;
                                  bgeu_ctrl  = 0;
                                 end
                          3'b001:begin
                                  alu_ctrl <= 6'b011100;  // BNEQ
                                  bneq_ctrl = 1;
                                  beq_ctrl = 0;
                                  bge_ctrl = 0;
                                  blt_ctrl  = 0;
                                  bltu_ctrl = 0;
                                  bgeu_ctrl  = 0;
                                 end
                          3'b100:begin
                                  alu_ctrl <= 6'b011101;  // BLT
                                  bneq_ctrl = 0;
                                  beq_ctrl = 0;
                                  bge_ctrl = 0;
                                  blt_ctrl  = 1;
                                  bltu_ctrl = 0;
                                  bgeu_ctrl  = 0;
                                 end
                          3'b101:begin
                                  alu_ctrl <= 6'b011110;  // BGE
                                  bneq_ctrl = 0;
                                  beq_ctrl = 0;
                                  bge_ctrl = 1;
                                  blt_ctrl  = 0;
                                  bltu_ctrl = 0;
                                  bgeu_ctrl  = 0;
                                 end
                          3'b110:begin
                                  alu_ctrl <= 6'b011111;  // BLTU
                                  bneq_ctrl = 0;
                                  beq_ctrl = 0;
                                  bge_ctrl = 0;
                                  blt_ctrl  = 0;
                                  bltu_ctrl = 1;
                                  bgeu_ctrl  = 0;
                                 end
                          3'b111:begin
                                  alu_ctrl <= 6'b100000;  // BGEU
                                  bneq_ctrl = 0;
                                  beq_ctrl = 0;
                                  bge_ctrl = 0;
                                  blt_ctrl  = 0;
                                  bltu_ctrl = 0;
                                  bgeu_ctrl  = 1;
                                 end
                          endcase
                      end
           7'b0110111:begin
                          alu_ctrl <= 6'b100001;  // LUI
                          mem_to_reg = 0;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 0;
                           lui_ctrl  = 1;
                           lb = 0;
                           sw = 0;
                      end
           7'b0010111:begin
                          alu_ctrl <= 6'b100010;  // AUIPC
                          mem_to_reg = 0;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 0;
                           lui_ctrl  = 0;
                           lb = 0;
                           sw = 0;
                      end
           7'b1101111:begin
                          alu_ctrl <= 6'b100011;  // JAL
                          mem_to_reg = 0;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 1;
                           lui_ctrl  = 0;
                           lb = 0;
                           sw = 0;
                      end
           7'b1100111:begin
                          alu_ctrl <= 6'b100100;  // JALR
                          mem_to_reg = 0;
                           bneq_ctrl = 0;
                           beq_ctrl = 0;
                           bge_ctrl = 0;
                           blt_ctrl  = 0;
                           bltu_ctrl = 0;
                           bgeu_ctrl  = 0;
                           jump_ctrl  = 1;
                           lui_ctrl  = 0;
                           lb = 0;
                           sw = 0;
                      end
           endcase
       end
       
       
       
       
       
endmodule
