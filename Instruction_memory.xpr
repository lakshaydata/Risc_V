`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: Lakshay Data
// 
// Create Date: 23.12.2024 14:12:58
// Design Name: 
// Module Name: Instruction_Memory
// Project Name: Instruction Memory
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Instruction_Memory(
input clk, 
input reset, 
input [6:0] PC, 
input [31:0] inst1,
input mode,
output [31:0] instruction);

reg [7:0] IM [39:0];
reg [31:0] output_inst;
integer i;
always@(posedge clk)
  begin
    if(reset)
      begin
        for(i=0;i<40;i=i+1)
          begin
            IM[i] <= 8'b00000000;
          end
      end
    else 
      begin
         if(!mode)
             begin
                 output_inst <= {IM[PC+3],IM[PC+2],IM[PC+1],IM[PC]};
             end
         else
             begin
                 {IM[7],IM[6],IM[5],IM[4]} <= {inst1[31:24],inst1[23:16],inst1[15:8],inst1[7:0]};
             // yeh 4,5,6,7 mein isliye store kiya hai kyunki IFU mein PC  ki value after  pos edge clk 0+4 ho jayegi.
             end
        
      end
  end

assign instruction = output_inst;
      
endmodule 
